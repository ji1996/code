<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>B2R2.FrontEnd.BinLifter.Optimizer</name></assembly>
<members>
<member name="M:B2R2.FrontEnd.BinLifter.LocalOptimizer.TrimIEMark(B2R2.BinIR.LowUIR.Stmt[])">
<summary>
 Remove unnecessary IEMark to ease the analysis.
</summary>
</member>
<member name="M:B2R2.FrontEnd.BinLifter.LocalOptimizer.Optimize(B2R2.BinIR.LowUIR.Stmt[])">
<summary>
 Run optimization on a flattened IR statements (an array of IR statements).
</summary>
</member>
<member name="T:B2R2.FrontEnd.BinLifter.LocalOptimizer">
<summary>
 Intra-block local IR optimizer.
</summary>
</member>
<member name="M:B2R2.FrontEnd.BinLifter.ConstantFolding.optimize(B2R2.BinIR.LowUIR.Stmt[])">
<summary>
 Assuming that the stmts are localized, i.e., those stmts represent a basic
 block, perform local constant folding.
</summary>
</member>
<member name="M:B2R2.FrontEnd.BinLifter.DeadCodeElimination.optimize(B2R2.BinIR.LowUIR.Stmt[])">
<summary>
 Assuming that the stmts are localized, i.e., those stmts represent a basic
 block, perform dead code elimination.
</summary>
</member>
</members>
</doc>
